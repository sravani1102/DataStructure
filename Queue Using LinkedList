#include<stdio.h>
#include<stdlib.h>
struct Qlist
{
        int data;
        struct Qlist *next;
};
typedef struct Qlist node;
node *f=NULL;
node *r=NULL;
void enque(int x)
{
        node *new;
        new=(node *)malloc(sizeof(node));
        new->data=x;
        new->next=NULL;
        if(f==NULL)
        {
                f=new;
                r=new;
        }
        else
        {
                r->next=new;
                r=new;
        }
}
int deque()
{
        node *temp;
        if(f==NULL)
                return -1;
        else if(r==f)
        {
                temp=f;
                int x=f->data;
                r=f=NULL;
                free(temp);
                return x;
        }
        else
        {
                temp=f;
                int x=f->data;
                f=f->next;
                free(temp);
                return x;
        }
}
void display()
{
        node *temp;
        if(f==NULL)
                printf("Queue is not found\n");
        else
        {
                printf("Queue:\n");
                for(temp=f;temp!=NULL;temp=temp->next)
                        printf("%d->",temp->data);
                printf("NULL\n");
        }
}
void main()
{
        int ch,x;
        printf("Menu Driven\n1.Enqueue\n2.Dequeue\n3.Display\n4.Exit\n");
        while(1)
        {
                printf("Enter your choice:\n");
                scanf("%d",&ch);
                switch(ch)
                {
                        case 1:printf("Enter a value to enque an element in queue\n");
                               scanf("%d",&x);
                               enque(x);
                               break;
                        case 2:x=deque();
                               if(x==-1)
                                       printf("Queue Under Flow\n");
                               else
                                       printf("Deque element is %d\n",x);
                               break;
                        case 3:display();
                               break;
                        case 4:printf("While loop is terminated\n");
                               exit(0);
                               break;
                        default:printf("Check your choice\n");
                }
        }
}
